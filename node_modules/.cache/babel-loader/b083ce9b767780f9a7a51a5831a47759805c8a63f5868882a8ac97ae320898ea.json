{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/final-project_group-3/src/Results.js\";\nimport React from 'react';\n\n// Function to get image URL based on animal type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getImageUrl(animalType) {\n  switch (animalType) {\n    case 'dog':\n      return require(\"../src/img/dog.jpeg\");\n    case 'cat':\n      return require(\"../src/img/cat.jpeg\");\n    case 'turtle':\n      return require(\"../src/img/turtle.jpeg\");\n    case 'bunny':\n      return require(\"../src/img/bunny.webp\");\n    default:\n      return \"\";\n    // Return an empty string if animalType is undefined or null\n  }\n}\nfunction Results({\n  formData\n}) {\n  // Check if formData exists before accessing its properties\n  if (!formData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Get the image URL based on animal type\n  const petImageUrl = getImageUrl(formData.animalType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"results\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Race Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"your-pet\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Pet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: petImageUrl,\n        alt: \"your pet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", formData.petName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Diet: \", formData.dietType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Exercise level: \", formData.exercise]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Race time: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"leaderboard\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pet Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","getImageUrl","animalType","require","Results","formData","children","fileName","_jsxFileName","lineNumber","columnNumber","petImageUrl","id","src","alt","petName","dietType","exercise","_c","$RefreshReg$"],"sources":["/Users/student/Desktop/final-project_group-3/src/Results.js"],"sourcesContent":["import React from 'react';\n\n// Function to get image URL based on animal type\nfunction getImageUrl(animalType) {\n    switch(animalType){\n        case 'dog':\n            return require(\"../src/img/dog.jpeg\");\n        case 'cat':\n            return require(\"../src/img/cat.jpeg\");\n        case 'turtle':\n            return require(\"../src/img/turtle.jpeg\");\n        case 'bunny':\n            return require(\"../src/img/bunny.webp\");\n        default:\n            return \"\"; // Return an empty string if animalType is undefined or null\n    }\n}\n\nfunction Results({ formData }) {\n    // Check if formData exists before accessing its properties\n    if (!formData) {\n        return <div>Loading...</div>;\n    }\n\n    // Get the image URL based on animal type\n    const petImageUrl = getImageUrl(formData.animalType);\n\n    return (\n        <div id=\"results\">\n            <h1>Race Results</h1>\n            \n            <div id=\"your-pet\">\n                <h2>Your Pet!</h2>\n                <img src={petImageUrl} alt=\"your pet\" />\n                <p>Name: {formData.petName}</p>\n                <p>Diet: {formData.dietType}</p>\n                <p>Exercise level: {formData.exercise}</p>\n                <p>Race time: </p>\n            </div>\n\n            <div id=\"leaderboard\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Rank</th>\n                            <th>Pet Name</th>\n                            <th>Time</th>\n                            <th>Owner</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default Results;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}